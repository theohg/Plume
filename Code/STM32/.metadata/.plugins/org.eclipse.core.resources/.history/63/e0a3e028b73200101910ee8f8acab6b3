/*
 * WS2812_SPI.c
 *
 *  Created on: Sep 4, 2023
 *      Author: controllerstech
 */


#include "main.h"
#include "WS2812_SPI.h"

#define NUM_LED 1
uint8_t LED_Data[NUM_LED][4];

extern SPI_HandleTypeDef hspi2;

extern int brightness = 100;
// Store the desired state of LEDs
uint8_t LED_Target_G[NUM_LED];
uint8_t LED_Target_R[NUM_LED];
uint8_t LED_Target_B[NUM_LED];
int     LED_Target_Brightness[NUM_LED];
uint8_t is_led_power_on = 0; // Track if 5V is currently on

void setLED (int led, int RED, int GREEN, int BLUE, int brightness_val)
{
    if (led >= NUM_LED) return;
    LED_Target_G[led] = GREEN;
    LED_Target_R[led] = RED;
    LED_Target_B[led] = BLUE;
    if (brightness_val < 0) brightness_val = 0;
    if (brightness_val > 100) brightness_val = 100;
    LED_Target_Brightness[led] = brightness_val;
}

void ws2812_spi (int GREEN, int RED, int BLUE)
{
	if (brightness>100)brightness = 100;
	GREEN = GREEN*brightness/100;
	RED = RED*brightness/100;
	BLUE = BLUE*brightness/100;
	uint32_t color = GREEN<<16 | RED<<8 | BLUE;
	uint8_t sendData[24];
	int indx = 0;

	for (int i=23; i>=0; i--)
	{
		if (((color>>i)&0x01) == 1) sendData[indx++] = 0b110;  // store 1
		else sendData[indx++] = 0b100;  // store 0
	}

	HAL_SPI_Transmit(&hspi2, sendData, 24, 1000);
}

void WS2812_Send (void)
{
    uint8_t should_power_be_on = 0;
    // Check if any LED is set to a non-zero color
    for (int i=0; i<NUM_LED; i++) {
        if (LED_Target_R[i] > 0 || LED_Target_G[i] > 0 || LED_Target_B[i] > 0) {
            should_power_be_on = 1;
            break;
        }
    }

    if (should_power_be_on) {
        if (!is_led_power_on) { // Turn on power only if it was off
            HAL_GPIO_WritePin(LED_5V_EN_GPIO_Port, LED_5V_EN_Pin, GPIO_PIN_SET);
            HAL_Delay(1); // Allow power to stabilize
            is_led_power_on = 1;
        }

        for (int i=0; i<NUM_LED; i++)
        {
            ws2812_spi_internal(LED_Target_G[i], LED_Target_R[i], LED_Target_B[i], LED_Target_Brightness[i]);
        }
        // Ensure reset/latch period
        HAL_Delay(1); // MOSI should be idle (low) during this HAL_Delay. 1ms > 50us.

    } else { // All LEDs are meant to be off
        if (is_led_power_on) {
            // Option 1: Send all zeros to explicitly turn them off, then turn off power
            for (int i=0; i<NUM_LED; i++) {
                 ws2812_spi_internal(0,0,0,0); // Send off command
            }
            HAL_Delay(1); // Latch off command

            HAL_GPIO_WritePin(LED_5V_EN_GPIO_Port, LED_5V_EN_Pin, GPIO_PIN_RESET);
            is_led_power_on = 0;

            // Option 2: Just turn off power (LEDs will remember last state briefly but then go off)
            // HAL_GPIO_WritePin(LED_5V_EN_GPIO_Port, LED_5V_EN_Pin, GPIO_PIN_RESET);
            // is_led_power_on = 0;
        }
    }
}
